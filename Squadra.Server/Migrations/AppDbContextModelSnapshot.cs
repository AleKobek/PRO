// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Squadra.Server.Context;

#nullable disable

namespace Squadra.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Squadra.Server.Models.Jezyk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Jezyk", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "polski"
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "angielski"
                        },
                        new
                        {
                            Id = 3,
                            Nazwa = "niemiecki"
                        },
                        new
                        {
                            Id = 4,
                            Nazwa = "francuski"
                        },
                        new
                        {
                            Id = 5,
                            Nazwa = "hiszpański"
                        },
                        new
                        {
                            Id = 6,
                            Nazwa = "japoński"
                        },
                        new
                        {
                            Id = 7,
                            Nazwa = "rosyjski"
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.JezykProfilu", b =>
                {
                    b.Property<int>("JezykId")
                        .HasColumnType("int")
                        .HasColumnName("id_jezyka");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int")
                        .HasColumnName("id_uzytkownika");

                    b.Property<int>("StopienBieglosciId")
                        .HasColumnType("int")
                        .HasColumnName("id_stopnia_bieglosci");

                    b.HasKey("JezykId", "UzytkownikId")
                        .HasName("id_jezyk_uzytkownika");

                    b.HasIndex("StopienBieglosciId");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("JezykProfilu", (string)null);

                    b.HasData(
                        new
                        {
                            JezykId = 1,
                            UzytkownikId = 1,
                            StopienBieglosciId = 3
                        },
                        new
                        {
                            JezykId = 2,
                            UzytkownikId = 1,
                            StopienBieglosciId = 2
                        },
                        new
                        {
                            JezykId = 3,
                            UzytkownikId = 1,
                            StopienBieglosciId = 1
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.Kraj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("Kraj", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "Polska"
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "Anglia"
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.Profil", b =>
                {
                    b.Property<int>("IdUzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUzytkownika"));

                    b.Property<byte[]>("Awatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Opis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pseudonim")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("id_regionu");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("id_statusu");

                    b.Property<string>("Zaimki")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdUzytkownika");

                    b.HasIndex("RegionId");

                    b.HasIndex("StatusId");

                    b.ToTable("Profil", (string)null);

                    b.HasData(
                        new
                        {
                            IdUzytkownika = 1,
                            Awatar = new byte[0],
                            Opis = "Lubię placki!",
                            Pseudonim = "Leczo",
                            RegionId = 2,
                            StatusId = 1,
                            Zaimki = "she/her"
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KrajId")
                        .HasColumnType("int")
                        .HasColumnName("id_kraju");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("KrajId");

                    b.ToTable("Region", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KrajId = 1,
                            Nazwa = "Nie określono"
                        },
                        new
                        {
                            Id = 2,
                            KrajId = 1,
                            Nazwa = "Mazowieckie"
                        },
                        new
                        {
                            Id = 3,
                            KrajId = 1,
                            Nazwa = "Dolnoslaskie"
                        },
                        new
                        {
                            Id = 4,
                            KrajId = 1,
                            Nazwa = "Lubelskie"
                        },
                        new
                        {
                            Id = 5,
                            KrajId = 1,
                            Nazwa = "Lubuskie"
                        },
                        new
                        {
                            Id = 6,
                            KrajId = 1,
                            Nazwa = "Podkarpackie"
                        },
                        new
                        {
                            Id = 7,
                            KrajId = 1,
                            Nazwa = "Podlaskie"
                        },
                        new
                        {
                            Id = 8,
                            KrajId = 1,
                            Nazwa = "Zachodniopomorskie"
                        },
                        new
                        {
                            Id = 9,
                            KrajId = 1,
                            Nazwa = "Wielkopolskie"
                        },
                        new
                        {
                            Id = 10,
                            KrajId = 2,
                            Nazwa = "Nie określono"
                        },
                        new
                        {
                            Id = 11,
                            KrajId = 2,
                            Nazwa = "West Midlands"
                        },
                        new
                        {
                            Id = 12,
                            KrajId = 2,
                            Nazwa = "South West England"
                        },
                        new
                        {
                            Id = 13,
                            KrajId = 2,
                            Nazwa = "South East England"
                        },
                        new
                        {
                            Id = 14,
                            KrajId = 2,
                            Nazwa = "North West England"
                        },
                        new
                        {
                            Id = 15,
                            KrajId = 2,
                            Nazwa = "North East England"
                        },
                        new
                        {
                            Id = 16,
                            KrajId = 2,
                            Nazwa = "Greater London"
                        },
                        new
                        {
                            Id = 17,
                            KrajId = 2,
                            Nazwa = "East od England"
                        },
                        new
                        {
                            Id = 18,
                            KrajId = 2,
                            Nazwa = "East Midlands"
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "Dostępny"
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "Zaraz wracam"
                        },
                        new
                        {
                            Id = 3,
                            Nazwa = "Nie przeszkadzać"
                        },
                        new
                        {
                            Id = 4,
                            Nazwa = "Niewidoczny"
                        },
                        new
                        {
                            Id = 5,
                            Nazwa = "Offline"
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.StopienBieglosciJezyka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Wartosc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StopienBieglosciJezyka", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "Podstawowy",
                            Wartosc = 1
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "Średnio-zaawansowany",
                            Wartosc = 2
                        },
                        new
                        {
                            Id = 3,
                            Nazwa = "Zaawansowany",
                            Wartosc = 3
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DataUrodzenia")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NumerTelefonu")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Uzytkownik", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataUrodzenia = new DateOnly(2002, 10, 5),
                            Email = "eee@eeee.ee",
                            Haslo = "123456",
                            Login = "Leczo"
                        });
                });

            modelBuilder.Entity("Squadra.Server.Models.JezykProfilu", b =>
                {
                    b.HasOne("Squadra.Server.Models.Jezyk", "Jezyk")
                        .WithMany("JezykProfiluCollection")
                        .HasForeignKey("JezykId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JezykProfilu_Jezyk");

                    b.HasOne("Squadra.Server.Models.StopienBieglosciJezyka", "StopienBieglosciJezyka")
                        .WithMany("JezykUzytkownikaCollection")
                        .HasForeignKey("StopienBieglosciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JezykUzytkownika_StopienBieglosci");

                    b.HasOne("Squadra.Server.Models.Profil", "Profil")
                        .WithMany("JezykUzytkownikaCollection")
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JezykProfilu_Profil");

                    b.Navigation("Jezyk");

                    b.Navigation("Profil");

                    b.Navigation("StopienBieglosciJezyka");
                });

            modelBuilder.Entity("Squadra.Server.Models.Profil", b =>
                {
                    b.HasOne("Squadra.Server.Models.Region", "Region")
                        .WithMany("ProfilCollection")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("Profil_Region");

                    b.HasOne("Squadra.Server.Models.Status", "Status")
                        .WithMany("ProfilCollection")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Profil_Status");

                    b.Navigation("Region");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Squadra.Server.Models.Region", b =>
                {
                    b.HasOne("Squadra.Server.Models.Kraj", "Kraj")
                        .WithMany("RegionCollection")
                        .HasForeignKey("KrajId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Region_Kraj");

                    b.Navigation("Kraj");
                });

            modelBuilder.Entity("Squadra.Server.Models.Uzytkownik", b =>
                {
                    b.HasOne("Squadra.Server.Models.Profil", "Profil")
                        .WithOne("Uzytkownik")
                        .HasForeignKey("Squadra.Server.Models.Uzytkownik", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Uzytkownik_Profil");

                    b.Navigation("Profil");
                });

            modelBuilder.Entity("Squadra.Server.Models.Jezyk", b =>
                {
                    b.Navigation("JezykProfiluCollection");
                });

            modelBuilder.Entity("Squadra.Server.Models.Kraj", b =>
                {
                    b.Navigation("RegionCollection");
                });

            modelBuilder.Entity("Squadra.Server.Models.Profil", b =>
                {
                    b.Navigation("JezykUzytkownikaCollection");

                    b.Navigation("Uzytkownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Squadra.Server.Models.Region", b =>
                {
                    b.Navigation("ProfilCollection");
                });

            modelBuilder.Entity("Squadra.Server.Models.Status", b =>
                {
                    b.Navigation("ProfilCollection");
                });

            modelBuilder.Entity("Squadra.Server.Models.StopienBieglosciJezyka", b =>
                {
                    b.Navigation("JezykUzytkownikaCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
